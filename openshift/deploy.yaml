apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: proms-mcp-server
  annotations:
    description: "Proms MCP Server deployment template"
    tags: "prometheus,mcp,monitoring"
parameters:
- name: IMAGE
  description: "Container image name"
  required: true
- name: IMAGE_TAG
  description: "Git commit SHA (7 characters)"
  required: true
- name: MEMORY_REQUEST
  description: "Memory request"
  value: "256Mi"
- name: MEMORY_LIMIT
  description: "Memory limit"
  value: "512Mi"
- name: CPU_REQUEST
  description: "CPU request"
  value: "100m"
- name: LOG_LEVEL
  description: "Logging level"
  value: "INFO"
- name: GRAFANA_DATASOURCES_PATH
  description: "Path to datasource configuration file"
  value: "/etc/grafana/provisioning/datasources/datasources.yaml"
- name: QUERY_TIMEOUT
  description: "Query timeout in seconds"
  value: "30"
- name: SECRET_NAME
  description: "Name of the secret containing datasource configuration"
  value: "grafana-datasources"
- name: AUTH_MODE
  description: "Authentication mode (none, active)"
  value: "active"
- name: OPENSHIFT_API_URL
  description: "OpenShift API server URL for token validation (required for active auth)"
  value: "https://kubernetes.default.svc"
- name: OPENSHIFT_CA_CERT_PATH
  description: "Path to CA certificate file for SSL verification (optional, only needed for custom certificates)"
  value: /run/secrets/kubernetes.io/serviceaccount/ca.crt
- name: NAMESPACE
  description: "Namespace where the service account is created"
  required: true
- name: HOSTNAME
  description: "Hostname for the route"
  required: true

objects:
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: proms-mcp-server
    labels:
      app: proms-mcp-server

- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: proms-mcp-server
    labels:
      app: proms-mcp-server
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: proms-mcp-server
    template:
      metadata:
        labels:
          app: proms-mcp-server
      spec:
        serviceAccountName: proms-mcp-server
        containers:
        - name: proms-mcp-server
          image: "${IMAGE}:${IMAGE_TAG}"
          ports:
          - containerPort: 8000
            protocol: TCP
            name: mcp
          - containerPort: 8080
            protocol: TCP
            name: health-metrics
          env:
          - name: PORT
            value: "8000"
          - name: HEALTH_METRICS_PORT
            value: "8080"
          - name: LOG_LEVEL
            value: "${LOG_LEVEL}"
          - name: GRAFANA_DATASOURCES_PATH
            value: "${GRAFANA_DATASOURCES_PATH}"
          - name: QUERY_TIMEOUT
            value: "${QUERY_TIMEOUT}"
          - name: AUTH_MODE
            value: "${AUTH_MODE}"
          - name: OPENSHIFT_API_URL
            value: "${OPENSHIFT_API_URL}"
          - name: OPENSHIFT_CA_CERT_PATH
            value: "${OPENSHIFT_CA_CERT_PATH}"
          resources:
            requests:
              memory: "${MEMORY_REQUEST}"
              cpu: "${CPU_REQUEST}"
            limits:
              memory: "${MEMORY_LIMIT}"
          volumeMounts:
          - name: datasources-config
            mountPath: "/etc/grafana/provisioning/datasources/"
            readOnly: true
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 3
            successThreshold: 1
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
            successThreshold: 1
          startupProbe:
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 5
            failureThreshold: 6
            successThreshold: 1
        volumes:
        - name: datasources-config
          secret:
            secretName: "${SECRET_NAME}"
        terminationGracePeriodSeconds: 10

- apiVersion: v1
  kind: Service
  metadata:
    name: proms-mcp-server
    labels:
      app: proms-mcp-server
  spec:
    type: ClusterIP
    ports:
    - name: mcp
      port: 8000
      protocol: TCP
      targetPort: 8000
    - name: health-metrics
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: proms-mcp-server

- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    annotations:
      cert-manager.io/issuer-kind: ClusterIssuer
      cert-manager.io/issuer-name: letsencrypt-devshiftnet-dns
      haproxy.router.openshift.io/timeout: 1m
    name: proms-mcp-server
    labels:
      app: proms-mcp-server
  spec:
    host: ${HOSTNAME}
    to:
      kind: Service
      name: proms-mcp-server
      weight: 100
    port:
      targetPort: mcp
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: edge
  wildcardPolicy: None

- apiVersion: policy/v1
  kind: PodDisruptionBudget
  metadata:
    name: proms-mcp-server-pdb
    labels:
      app: proms-mcp-server
  spec:
    minAvailable: 1
    selector:
      matchLabels:
        app: proms-mcp-server
