# Build system not needed for uv-managed project

[project]
name = "proms-mcp"
version = "0.1.0"
description = "A lean MCP server that provides LLM agents with transparent access to multiple Prometheus instances"
authors = [
    {name = "App-SRE", email = "app-sre@redhat.com"}
]
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "fastmcp>=2.11.2",
    "pyyaml>=6.0.2",
    "httpx>=0.28.0",
    "structlog>=24.4.0",
    "pydantic>=2.11.0",
    "asyncache>=0.3.1",
]

[tool.uv]
dev-dependencies = [
    "pytest>=8.3.0",
    "pytest-asyncio>=1.0.0",
    "pytest-cov>=6.0.0",
    "ruff>=0.11.0",
    "mypy>=1.17.0",
    "types-PyYAML>=6.0.12.20250516",
    "types-cachetools>=5.3.0",
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true
exclude = [
    "htmlcov/.*",
    "__pycache__/.*",
    ".pytest_cache/.*"
]

[[tool.mypy.overrides]]
module = [
    "prometheus_api_client.*",
    "mcp.*",
    "structlog.*"
]
ignore_missing_imports = true

# Note: uv scripts not supported in current version
# Use: uv run python server.py, uv run pytest --cov --cov-report=html, etc.

[tool.ruff]
line-length = 88
target-version = "py311"

[tool.ruff.lint]
select = ["E", "F", "I", "N", "W", "UP"]
ignore = ["E501"]  # Line too long (handled by formatter)

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--strict-markers --strict-config"
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "asyncio: Async tests",
]

[tool.coverage.run]
source = ["proms_mcp"]
omit = ["tests/*", "venv/*", ".venv/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
] 
