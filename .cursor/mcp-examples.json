{
  "development-no-auth": {
    "description": "Local development with no authentication (AUTH_MODE=none)",
    "mcpServers": {
      "proms-mcp-dev": {
        "url": "http://localhost:8000/mcp/",
        "description": "Development server - authentication disabled"
      }
    },
    "server_setup": [
      "# Start server in no-auth mode:",
      "export AUTH_MODE=none",
      "uv run python -m proms_mcp"
    ]
  },
  "development-with-auth": {
    "description": "Local development with authentication enabled for testing",
    "mcpServers": {
      "proms-mcp-auth-test": {
        "url": "http://localhost:8000/mcp/",
        "headers": {
          "Authorization": "Bearer your-openshift-token-here"
        },
        "description": "Local server with authentication for testing auth flows"
      }
    },
    "setup": [
      "# 1. Login to OpenShift:",
      "oc login https://api.cluster.example.com:6443",
      "",
      "# 2. Get your token and replace 'your-openshift-token-here' above:",
      "oc whoami -t"
    ],
    "server_setup": [
      "# Start local server with authentication enabled:",
      "export AUTH_MODE=active",
      "export OPENSHIFT_API_URL=https://api.cluster.example.com:6443",
      "export OPENSHIFT_SSL_VERIFY=false  # For dev with self-signed certs",
      "export OPENSHIFT_SERVICE_ACCOUNT_TOKEN=$(oc whoami -t)",
      "uv run python -m proms_mcp"
    ]
  },
  "usage_notes": {
    "security": [
      "‚ö†Ô∏è  NEVER commit .cursor/mcp.json with real tokens to git",
      "‚ö†Ô∏è  Copy configurations above to .cursor/mcp.json and customize",
      "‚ö†Ô∏è  Replace 'your-openshift-token-here' with actual tokens"
    ],
    "path_behavior": [
      "üìù Always use '/mcp/' (with trailing slash) in URLs",
      "üìù This avoids HTTP 307 redirects that can break authentication",
      "üìù Some MCP clients don't resend auth headers after redirects"
    ],
    "auth_modes": [
      "üîì AUTH_MODE=none: No authentication (development only)",
      "üîí AUTH_MODE=active: OpenShift bearer token validation"
    ]
  }
} 
